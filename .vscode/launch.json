{
	"version": "0.2.0",
	"configurations": [

        
        { "name": "Focused UX", //>
			"type": "extensionHost",
			"request": "launch",
			"args": [
				"--profile=Clean",
				"--extensionDevelopmentPath=${workspaceFolder}",
				"${workspaceFolder}"
			],
			"outFiles": [
				"${workspaceFolder}/dist/**/*.js"
			],
			"sourceMaps": true,
            "preLaunchTask": "npm: build - monorepo"
			// "preLaunchTask": "watch"
		}, //<
        
        { "name": "Dynamicons", //>
			"type": "extensionHost",
			"request": "launch",
			"args": [
                "--profile=Clean",
				"--extensionDevelopmentPath=${workspaceFolder}/packages/dynamicons/ext",
				"${workspaceFolder}" // "${workspaceFolder} // for root or /packages/dynamicons/ext
			],
			"outFiles": [
				"${workspaceFolder}/packages/dynamicons/ext/dist/**/*.js",
				"${workspaceFolder}/packages/dynamicons/core/dist/**/*.js"
			],
			"sourceMaps": true,
            "preLaunchTask": "Build Dynamicons Packages"
            
            
            
            
            
		}, //<
        
        { "name": "Context Cherry Picker", //>
			"type": "extensionHost",
			"request": "launch",
			"args": [
                "--profile=Clean",
				"--extensionDevelopmentPath=${workspaceFolder}/packages/context-cherry-picker/ext",
				// Workspace to open in the new EH window. Can be the root or the extension's own folder for focused testing.
				// Using root for now, as CCP often operates on the whole workspace.
				"${workspaceFolder}" 
			],
			"outFiles": [
				"${workspaceFolder}/packages/context-cherry-picker-ext/dist/**/*.js",
				"${workspaceFolder}/packages/shared/shared-services/dist/**/*.js" 
			],
			"sourceMaps": true,
            "preLaunchTask": "Build CCP Satellite Package" // New preLaunchTask
		}, //<
        
        { "name": "Ghost Writer", //>
			"type": "extensionHost",
			"request": "launch",
			"args": [
                "--profile=Clean",
				"--extensionDevelopmentPath=${workspaceFolder}/packages/ghost-writer/ext",
				// Workspace to open in the new EH window. Can be the root or the extension's own folder for focused testing.
				// Using root for now, as CCP often operates on the whole workspace.
				"${workspaceFolder}" 
			],
			"outFiles": [
				"${workspaceFolder}/packages/ghost-writer/ext/dist/**/*.js",
				"${workspaceFolder}/packages/shared/shared-services/dist/**/*.js" 
			],
			"sourceMaps": true,
            "preLaunchTask": "Build Ghost Writer" // New preLaunchTask
		}, //<
        
        { "name": "Note Hub", //>
			"type": "extensionHost",
			"request": "launch",
			"args": [
                "--profile=Clean",
				"--extensionDevelopmentPath=${workspaceFolder}/packages/notes-hub/ext",
				"${workspaceFolder}" 
			],
			"outFiles": [
				"${workspaceFolder}/packages/notes-hub/ext/dist/**/*.js",
				"${workspaceFolder}/packages/shared/shared-services/dist/**/*.js" 
			],
			"sourceMaps": true,
            "preLaunchTask": "Build Notes Hub"
		}, //<

        
        { "name": "Terminal Butler", //>
			"type": "extensionHost",
			"request": "launch",
			"args": [
                "--profile=Clean",
				"--extensionDevelopmentPath=${workspaceFolder}/packages/terminal-butler/ext",
				"${workspaceFolder}" 
			],
			"outFiles": [
				"${workspaceFolder}/packages/terminal-butler/ext/dist/**/*.js",
                "${workspaceFolder}/packages/shared/shared-services/dist/**/*.js" 

			],
			"sourceMaps": true,
            "preLaunchTask": "Build Terminal Butler"
		}, //<
        
        
        
        
        

	]
}